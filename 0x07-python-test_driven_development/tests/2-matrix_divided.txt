>>> matrix_module = __import__("2-matrix_divided")
>>> util = __import__("testing_util")
>>> no_imports, precision = util.no_imports, util.check_matrix_precision
>>> no_imports(matrix_module, ['matrix_divided'])
True
>>> matrix_divided = matrix_module.matrix_divided

================================================
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
================================================

>>> matrix_divided((1, 2), 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided({}, 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided('hellothere', 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("", 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats




================================================
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
================================================

>>> matrix_divided([[6], [6, 6], [6, 6, 6]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[], [6, 6], [6, 6, 6]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[6], [6, 6]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


================================================
Traceback (most recent call last):
TypeError: div must be a number
================================================

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], (1,))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], [])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], {})
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], 'hellothere')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], "")
Traceback (most recent call last):
TypeError: div must be a number


================================================
Traceback (most recent call last):
ZeroDivisionError: division by zero
================================================

>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

================================================
Output must be rounded 2 decimal places
================================================
>>> matrix_divided([[100, 100], [100, 100]], 3)
[[33.33, 33.33], [33.33, 33.33]]

================================================
Returns a new matrix
================================================
